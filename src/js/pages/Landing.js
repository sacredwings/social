import React, {Component} from 'react';
import {connect} from 'react-redux';
import axios from 'axios';
import {Link} from "react-router-dom";
import cookie from '../utils/cookie';
import YandexShare from '../elements/YandexShare';


class Landing extends Component {
    constructor () {
        super();

    }

    async componentDidMount () {
        if (this.props.match.params.ref)
            cookie.set('ref=' + this.props.match.params.ref, false);
    }

    render() {
        return (
            <div className="landing">
                <div id="height">
                    <div className="container">
                        <br/>
                        <br/>
                        <div className="row text-center">
                            <div className="col-lg-12">
                                <img src={`/logo_big.png`} style={{maxWidth: '100px'}}/>
                                <br/>
                                <button type="button" className="btn btn-light">üíµ ..–ø–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ—ç–∫—Ç.. üíµ</button>
                            </div>
                        </div>
                        <div className="row text-center">
                            <div className="col-lg-12">
                                <h1 className="">–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å –¥–ª—è –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö</h1>
                                <br/>
                                <p>–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –≤–æ–µ–Ω–Ω—ã—Ö</p>
                                <p>–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ —É—á–∞–≤—Å—Ç–≤—É–π—Ç–µ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö</p>
                                <p>–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</p>
                                <p>–ê–Ω–æ–Ω–∏–º–Ω–æ</p>
                            </div>

                        </div>

                        <div className="row text-center">
                            <div className="col-lg-12">
                                <span className="badge bg-warning text-dark">–ó–∞–ø—É—Å–∫ —Å–µ—Ç–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ 2 –Ω–µ–¥–µ–ª—å</span>
                            </div>

                        </div>
                    </div>
                </div>

            </div>
        )
    }

}

export default connect (
    state => ({
        myUser: state.myUser,
    }),
    dispatch => ({
        Store_myUser: (login, tokenId, tokenKey, remember) => {
            dispatch({type: 'AUTH', login: login, tokenId: tokenId, tokenKey: tokenKey, remember: remember});
        }
    })
)(Landing);

